from collections import deque
from typing import Optional, List
# https://leetcode.com/problems/binary-tree-right-side-view/

# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        ret = []

        queue = deque()
        
        queue.append(root)

        while queue:
            right = None

            for _ in range(len(queue)):
                node = queue.popleft()
                if node:
                    right = node
                    queue.append(node.left)
                    queue.append(node.right)

            if right:
                ret.append(right.val)

        return ret

        